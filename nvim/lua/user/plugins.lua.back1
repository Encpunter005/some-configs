local fn = vim.fn

-- Automatically install packer
local install_path = fn.stdpath "data" .. "/site/pack/packer/start/packer.nvim"
if fn.empty(fn.glob(install_path)) > 0 then
  PACKER_BOOTSTRAP = fn.system {
    "git",
    "clone",
    "--depth",
    "1",
    "https://github.com/wbthomason/packer.nvim",
    install_path,
  }
  print "Installing packer close and reopen Neovim..."
  vim.cmd [[packadd packer.nvim]]
end
-- Autocommand that reloads neovim whenever you save the plugins.lua file
vim.cmd [[
  augroup packer_  r_config
    autocmd!
    autocmd BufWritePost plugins.lua source <afile> | PackerSync
  augroup end
]]

-- Use a protected call so we don't error out on first
local status_ok, packer = pcall(require, "packer")
if not status_ok then
  vim.notify("packer didn't work")
  return
end

-- Have packer    a popup window
packer.init {
  display = {
    open_fn = function()
      return require("packer.util").float { border = "rounded" }
    end,
  },
}

-- Install your plugins here
return packer.startup(function(  )
  -- My plugins here
     "wbthomason/packer.nvim" -- Have packer manage itself
     "nvim-lua/popup.nvim" -- An implementation of the Popup API from vim in Neovim
     "nvim-lua/plenary.nvim" -- Useful lua functions   d ny lots of plugins
  -- colorschemes
     "marko-cerovac/material.nvim"
     'rose-pine/neovim'
     'rockerBOO/boo-colorscheme-nvim'
     "pineapplegiant/spaceduck"
     'andersevenrud/nordic.nvim'
     'shaunsingh/nord.nvim'
     'folke/tokyonight.nvim'
     "olimorris/onedarkpro.nvim"
     "EdenEast/nightfox.nvim"
     'projekt0n/github-nvim-theme'
     { "catppuccin/nvim", as = "catppuccin" }
     "cocopon/iceberg.vim"
     "Tsuzat/NeoSolarized.nvim"
     "lunarvim/lunar.nvim"
     'norcalli/nvim-colorizer.lua'
  -- markdown
     "mzlogin/vim-markdown-toc" -- gernerate contents
     { 'iamcco/markdown-preview.nvim', run = 'cd app && yarn install', cmd = 'MarkdownPreview' } -- preview markdown files
     "dhruvasagar/vim-table-mode"

  -- auto save
    ({ "Pocco81/auto-save.nvim"})
  -- accelerate j k
     { 'rainbowhxch/accelerated-jk.nvim' }
  -- cmp plugins
     "hrsh7th/nvim-cmp" -- The completion plugin
     "hrsh7th/cmp-buffer" -- buffer completions
     "hrsh7th/cmp-path" -- path completions
     "hrsh7th/cmp-cmdline" -- cmdline completions
     "saadparwaiz1/cmp_luasnip" -- snippet completions
     { 'tzachar/cmp-tabnine', run = './install.sh', requires = 'hrsh7th/nvim-cmp' }
     "hrsh7th/cmp-nvim-lsp"
     "hrsh7th/cmp-nvim-lua"
     "f3fora/cmp-spell"
  -- lspkind
     'onsails/lspkind-nvim'
  -- snippets
     "L3MON4D3/LuaSnip" --snippet engine
     'hrsh7th/cmp-vsnip' --snippt engine
     'hrsh7th/vim-vsnip'
     "rafamadriz/friendly-snippets" -- a bunch of snippets to
  -- edit enhance

     { 'numToStr/Comment.nvim', config = function() require('Comment').setup() end }
  --     "terrortylor/nvim-comment"
     "folke/todo-comments.nvim"
     "folke/trouble.nvim"
     { "windwp/nvim-autopairs", config = function() require("nvim-autopairs").setup {} end }
     "mptre/vim-printf"  -- NOTE : :cmdPrintf<CR> 自动帮你补全输出代码 :D
     "windwp/nvim-spectre" -- replace some words

  
  -- LSP
     "neovim/nvim-lspconfig" -- enable LSP
     "williamboman/mason.nvim" -- simple to    language server installer
     "williamboman/mason-lspconfig.nvim" -- simple to    language server installer
     "jose-elias-alvarez/null-ls.nvim" -- format
     "ray-x/lsp_signature.nvim"
     "j-hui/fidget.nvim" -- show the real status of lsp
    ({
    "glepnir/lspsaga.nvim",
    branch = "main",
    config = function()
        require("lspsaga").setup({})
    end,
    requires = { {"nvim-tree/nvim-web-devicons"} }
})
  --    "lukas-reineke/lsp-format.nvim"
  -- nvim tree
     {
    'nvim-tree/nvim-tree.lua',
    requires = {
      'nvim-tree/nvim-web-devicons', -- optional, for file icons
    },
    tag = 'nightly' -- optional, updated every week. (see issue #1193)
  }
  -- UI
     { 'nvim-lualine/lualine.nvim', requires = { 'kyazdani42/nvim-web-devicons', opt = true } }
  --    "glepnir/galaxyline.nvim"
  --    "rcarriga/nvim-notify" -- notify
  --    "MunifTanjim/nui.nvim" -- UI
  --    "folke/noice.nvim"  --  NOTE: 这个插件会与lsp-signature相互冲突，bug待修，另外这个popmenu位置参数调了不知道为啥没生效;-;
  


  -- Telescope
     {
    'nvim-telescope/telescope.nvim', tag = '0.1.1',
    -- or                            , branch = '0.1.x',
    requires = { { 'nvim-lua/plenary.nvim' } }
  }
     "nvim-telescope/telescope-dap.nvim"
     "nvim-telescope/telescope-ui-select.nvim"
     "nvim-telescope/telescope-rg.nvim"
     {
    'nvim-telescope/telescope-fzf-native.nvim',
    run = 'cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release && cmake --install build --prefix build'
  }
     {
    "nvim-telescope/telescope-live-grep-args.nvim",
    commit = "9f62ecc6f6282e65adedaa3a0f18daea05664e64"
  }
     'nvim-telescope/telescope-media-files.nvim'
     { "kkharji/sqlite.lua" }
     { "nvim-telescope/telescope-frecency.nvim" }

  -- dap
     'mfussenegger/nvim-dap'
     "rcarriga/nvim-dap-ui"
     "theHamsta/nvim-dap-virtual-text"
  -- outline
     "stevearc/aerial.nvim"
  -- treesitter
     "nvim-treesitter/nvim-treesitter"
     "nvim-treesitter/nvim-treesitter-context"
     "andymass/vim-matchup"
     "joosepalviste/nvim-ts-context-commentstring"

  -- dashboard
  --    "goolord/alpha-nvim"
     "glepnir/dashboard-nvim" -- TODO : 有一个显示运势，暂时不知道咋搞
  -- vim-illuminate
     "RRethy/vim-illuminate"
  -- commend + search
  --    "gelguy/wilder.nvim"
     "mrjones2014/legendary.nvim"

  -- select board
     'stevearc/dressing.nvim'
  -- terminal
     "akinsho/toggleterm.nvim"

  -- gps
     "SmiteshP/nvim-navic"
  --    "SmiteshP/nvim-gps"
     { 'fgheng/winbar.nvim' }
  -- buffer
     'akinsho/bufferline.nvim'
     'ojroques/nvim-bufdel' -- close buffer
     "lukas-reineke/indent-blankline.nvim" -- beautify indent
     'gen740/SmoothCursor.nvim'
     "xiyaowong/nvim-cursorword"
     "luukvbaal/stabilize.nvim" -- stabilize buffer events
  -- auto-command
     'jakelinnzy/autocmd-lua'
  -- whiick key
     "folke/which-key.nvim"
  -- quickfix
     "kevinhwang91/nvim-bqf"

  -- background transparent
     "xiyaowong/nvim-transparent"

  -- translate some words
     "voldikss/vim-translator"
     "potamides/pantran.nvim"
  -- cmake integration
     "Shatur/neovim-cmake"
  -- sniprun
     "michaelb/sniprun"
  -- jump
     "nacro90/numb.nvim"
     {
  'phaazon/hop.nvim',
  branch = 'v2', -- optional but strongly recommended
  config = function()
    -- you can configure Hop the way you like here; see :h hop-config
    require'hop'.setup { keys = 'etovxqpdygfblzhckisuran' }
  end
}
  -- start up time
     "dstein64/vim-startuptime"
     'lewis6991/impatient.nvim' --optimize the startup time

  -- web search
     "lalitmee/browse.nvim"

  -- Automatically set up your configuration after cloning packer.nvim
  -- Put this at the end after all plugins
  if PACKER_BOOTSTRAP then
    require("packer").sync()
  end
end)
